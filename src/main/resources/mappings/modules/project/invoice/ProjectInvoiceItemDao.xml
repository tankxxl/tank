<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.project.dao.invoice.ProjectInvoiceItemDao">

    <sql id="columns">
        a.project_id AS "apply.id",
        a.invoice_id AS "invoice.id",
        a.contract_id AS "contract.id",
        a.customer_invoice_id AS "customerInvoice.id",

        apply.project_name AS "apply.projectName",
        apply.project_code AS "apply.projectCode",
		apply.pro_main_stage AS "apply.proMainStage",
		apply.category AS "apply.category",
		apply.estimated_contract_amount AS "apply.estimatedContractAmount",
		apply.estimated_gross_profit_margin AS "apply.estimatedGrossProfitMargin",
		apply.outsourcing AS "apply.outsourcing",

		contract.contract_name AS "contract.contractName",
		contract.contract_code AS "contract.contractCode",
		contract.client_name AS "contract.clientName",

		ci.customer_name AS "customerInvoice.customerName",

        a.invoice_type AS "invoiceType",
        a.goods_name AS "goodsName",
        a.spec AS "spec",
        a.num AS "num",
        a.price AS "price",
        a.amount AS "amount",
        a.tax_rate AS "taxRate",
        a.amount_no_tax AS "amountNoTax",
        a.tax AS "tax",
        a.cost_amount AS "costAmount",

        a.attachment AS "attachment",

        a.return_date AS "returnDate",
        a.return_amount AS "returnAmount",

        a.client_name AS "clientName",
        a.content AS "content",
        a.settlement AS "settlement",
        a.settlement_begin AS "settlementBegin",
        a.settlement_end AS "settlementEnd",

        a.unit AS "unit",
        a.profit AS "profit",
        a.invoice_no AS "invoiceNo",
        a.invoice_date AS "invoiceDate",

        a.ver AS "ver",
        a.p_id AS "pId",

        a.reason AS "reason",
        a.invalid AS "invalid",

        u4.name AS "saler.name",
		u4.login_name AS "saler.loginName",
		s5.name AS "saler.office.name",

        a.id AS "id",
        a.create_by AS "createBy.id",
        a.create_date AS "createDate",
        a.update_by AS "updateBy.id",
        a.update_date AS "updateDate",
        a.remarks AS "remarks",
        a.del_flag AS "delFlag",
        a.proc_ins_id AS "procInsId",
        a.proc_status AS "procStatus"
    </sql>

    <sql id="columnsHead">
        a.project_id AS "apply.id",
        a.invoice_id AS "invoice.id",
        a.contract_id AS "contract.id",
        a.customer_invoice_id AS "customerInvoice.id",

        apply.project_name AS "apply.projectName",
        apply.project_code AS "apply.projectCode",
		apply.pro_main_stage AS "apply.proMainStage",
		apply.category AS "apply.category",
		apply.estimated_contract_amount AS "apply.estimatedContractAmount",
		apply.estimated_gross_profit_margin AS "apply.estimatedGrossProfitMargin",
		apply.outsourcing AS "apply.outsourcing",

        contract.contract_name AS "contract.contractName",
		contract.contract_code AS "contract.contractCode",

        a.invoice_type AS "invoiceType",
        a.goods_name AS "goodsName",
        a.spec AS "spec",
        a.num AS "num",
        a.price AS "price",
        a.amount AS "amount",
        a.tax_rate AS "taxRate",
        a.amount_no_tax AS "amountNoTax",
        a.tax AS "tax",
        a.cost_amount AS "costAmount",

        a.attachment AS "attachment",

        a.return_date AS "returnDate",
        a.return_amount AS "returnAmount",

        a.client_name AS "clientName",
        a.content AS "content",
        a.settlement AS "settlement",
        a.unit AS "unit",
        a.profit AS "profit",
        a.invoice_no AS "invoiceNo",
        a.invoice_date AS "invoiceDate",

        a.ver AS "ver",
        a.p_id AS "pId",

        t2.num AS "verNum",
        a.reason AS "reason",
        a.invalid AS "invalid",

        a.id AS "id",
        a.create_by AS "createBy.id",
        a.create_date AS "createDate",
        a.update_by AS "updateBy.id",
        a.update_date AS "updateDate",
        a.remarks AS "remarks",
        a.del_flag AS "delFlag",
        a.proc_ins_id AS "procInsId",
        a.proc_status AS "procStatus"
    </sql>

    <sql id="joins">
        LEFT JOIN project_invoice b ON b.id = a.invoice_id
        LEFT JOIN project_apply_external apply ON apply.id = a.project_id
        LEFT JOIN project_contract contract ON contract.id = a.contract_id
        LEFT JOIN customer_invoice ci ON ci.id = a.customer_invoice_id
        LEFT JOIN sys_area ar ON ar.id = ci.area_id

        LEFT JOIN sys_user u4 ON u4.id = apply.saler_id
		LEFT JOIN sys_office s5 on s5.id =u4.office_id
    </sql>

    <sql id="joinsHead">
        LEFT JOIN project_invoice b ON b.id = t2.invoice_id
        LEFT JOIN project_invoice_item a ON t2.ver = a.ver
        LEFT JOIN project_apply_external apply ON apply.id = a.project_id
        LEFT JOIN project_contract contract ON contract.id = a.contract_id
        LEFT JOIN customer_invoice ci ON ci.id = a.customer_invoice_id
        LEFT JOIN sys_area ar ON ar.id = ci.area_id

        LEFT JOIN sys_user u4 ON u4.id = apply.saler_id
		LEFT JOIN sys_office s5 on s5.id =u4.office_id
    </sql>

    <select id="get" resultType="ProjectInvoiceItem">
        SELECT
        <include refid="columns"/>
        FROM project_invoice_item a
        <include refid="joins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="ProjectInvoiceItem">
        SELECT
        <include refid="columns"/>
        FROM project_invoice_item a
        <include refid="joins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL} and a.invalid = #{DEL_FLAG_NORMAL}
            <if test="invoice!=null and invoice.id != null and invoice.id != ''">
                AND a.invoice_id = #{invoice.id}
            </if>

            <if test="apply!=null and apply.projectCode != null and apply.projectCode != ''">
                AND apply.project_code LIKE
                <if test="dbName == 'oracle'">'%'||#{apply.projectCode}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{apply.projectCode}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{apply.projectCode},'%')</if>
            </if>

            <if test="apply!=null and apply.projectName != null and apply.projectName != ''">
                AND apply.project_name LIKE
                <if test="dbName == 'oracle'">'%'||#{apply.projectName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{apply.projectName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{apply.projectName},'%')</if>
            </if>

            <if test="contract!=null and contract.contractCode != null and contract.contractCode != ''">
                AND contract.contract_code LIKE
                <if test="dbName == 'oracle'">'%'||#{contract.contractCode}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{contract.contractCodeapply.projectName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{contract.contractCode},'%')</if>
            </if>

            <if test="customerInvoice!=null and customerInvoice.customerName != null and customerInvoice.customerName != ''">
                AND ci.customer_name LIKE
                <if test="dbName == 'oracle'">'%'||#{customerInvoice.customerName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{customerInvoice.customerName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{customerInvoice.customerName},'%')</if>
            </if>

            <if test="content != null and content != ''">
                AND a.content LIKE
                <if test="dbName == 'oracle'">'%'||#{content}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{content}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{content},'%')</if>
            </if>

            <if test="amount != null and amount != ''">
                AND a.amount = #{amount}
            </if>

            <if test="customerInvoice!=null and customerInvoice.area != null and customerInvoice.area.parentIds != null and customerInvoice.area.parentIds != ''">
                AND (
                ar.id = #{customerInvoice.area.id}
                or ar.parent_ids LIKE
                <if test="dbName == 'oracle'">'%'||#{customerInvoice.customerName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{customerInvoice.customerName}+'%'</if>
                <if test="dbName == 'mysql'">concat(#{customerInvoice.area.parentIds},#{customerInvoice.area.id},',%')</if> )
            </if>


            ${sqlMap.dsf}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_date ASC
            </otherwise>
        </choose>
    </select>

    <!-- 查询最新版本 -->
    <select id="findHeadList" resultType="ProjectInvoiceItem">
        SELECT
        <include refid="columns"/>
        FROM (
          SELECT t1.invoice_id, count(ver) num, max(t1.ver) ver
          FROM project_invoice_item as t1
          WHERE t1.del_flag = #{DEL_FLAG_NORMAL}
          GROUP BY t1.invoice_id
        ) AS t2
        <include refid="joinsHead"/>
        <where>
            t2.invoice_id = a.invoice_id
            <if test="invoice!=null and invoice.id != null and invoice.id != ''">
                AND a.invoice_id = #{invoice.id}
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_date ASC
            </otherwise>
        </choose>
    </select>

    <!-- 查询某一合同的所有开票项版本，查询某一发票的所有版本 -->
    <select id="findVerList" resultType="ProjectInvoiceItem">
        SELECT
        <include refid="columns"/>
        FROM project_invoice_item a
        <include refid="joins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="contract != null and contract.id != null and contract.id != ''">
                AND a.contract_id = #{contract.id}
            </if>
            <if test="id != null and id != ''">
                AND a.p_id = #{id}
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.ver DESC
            </otherwise>
        </choose>
    </select>

    <select id="findByContractCode" resultType="ProjectInvoiceItem">
        SELECT
        <include refid="columns"/>
        FROM project_invoice_item a
        <include refid="joins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="contract!=null and contract.contractCode != null and contract.contractCode != ''">
                AND contract.contract_code = #{contract.contractCode}
            </if>
        </where>
    </select>

    <select id="findAllList" resultType="ProjectInvoiceItem">
        SELECT
        <include refid="columns"/>
        FROM project_invoice_item a
        <include refid="joins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_date ASC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO project_invoice_item(
        id,
        project_id,
        invoice_id,
        contract_id,
        contract_item_id,
        customer_invoice_id,

        invoice_type,
        goods_name,
        spec,
        num,
        price,
        amount,
        tax_rate,
        amount_no_tax,
        tax,
        cost_amount,

        attachment,

        return_date,
        return_amount,

        client_name,
        content,
        settlement,
        settlement_begin,
        settlement_end,

        unit,
        profit,
        invoice_no,
        invoice_date,

        ver,
        p_id,

        reason,
        invalid,

        create_by,
        create_date,
        update_by,
        update_date,
        remarks,
        del_flag,
        proc_ins_id,
        proc_status
        ) VALUES (
        #{id},
        #{apply.id},
        #{invoice.id},
        #{contract.id},
        #{contractItem.id},
        #{customerInvoice.id},

        #{invoiceType},
        #{goodsName},
        #{spec},
        #{num},
        #{price},
        #{amount},
        #{taxRate},
        #{amountNoTax},
        #{tax},
        #{costAmount},

        #{attachment},

        #{returnDate},
        #{returnAmount},

        #{clientName},
        #{content},
        #{settlement},
        #{settlementBegin},
        #{settlementEnd},

        #{unit},
        #{profit},
        #{invoiceNo},
        #{invoiceDate},

        #{ver},
        #{pId},

        #{reason},
        #{invalid},

        #{createBy.id},
        #{createDate},
        #{updateBy.id},
        #{updateDate},
        #{remarks},
        #{delFlag},
        #{procInsId},
        #{procStatus}
        )
    </insert>

    <update id="update">
        UPDATE project_invoice_item
        <trim prefix="set" suffixOverrides=",">
            <if test="apply!=null and apply.id != null">project_id = #{apply.id},</if>
            <if test="invoice!=null and invoice.id != null">invoice_id = #{invoice.id},</if>
            <if test="contract!=null and contract.id != null">contract_id = #{contract.id},</if>
            <if test="contractItem!=null and contractItem.id != null">contract_item_id = #{contractItem.id},</if>
            <if test="customerInvoice!=null and customerInvoice.id != null">customer_invoice_id = #{customerInvoice.id},</if>

            <if test="invoiceType!=null">invoice_type = #{invoiceType},</if>
            <if test="goodsName!=null">goods_name = #{goodsName},</if>
            <if test="spec!=null">spec = #{spec},</if>
            <if test="num!=null">num  = #{num},</if>
            <if test="price!=null">price = #{price},</if>
            <if test="amount!=null">amount = #{amount},</if>
            <if test="taxRate!=null">tax_rate = #{taxRate},</if>
            <if test="amountNoTax!=null">amount_no_tax = #{amountNoTax},</if>
            <if test="tax!=null">tax = #{tax},</if>
            <if test="costAmount!=null">cost_amount = #{costAmount},</if>
            <if test="attachment!=null">attachment = #{attachment},</if>
            <if test="returnDate!=null">return_date = #{returnDate},</if>
            <if test="returnAmount!=null">return_amount = #{returnAmount},</if>
            <if test="clientName!=null">client_name = #{clientName},</if>
            <if test="content!=null">content = #{content},</if>
            <if test="settlement!=null">settlement = #{settlement},</if>
            <if test="settlementBegin!=null">settlement_begin = #{settlementBegin},</if>
            <if test="settlementEnd!=null">settlement_end = #{settlementEnd},</if>

            <if test="unit!=null">unit = #{unit},</if>
            <if test="profit!=null">profit = #{profit},</if>
            <if test="invoiceNo!=null">invoice_no = #{invoiceNo},</if>
            <if test="invoiceDate!=null">invoice_date = #{invoiceDate},</if>
            <if test="ver!=null">ver = #{ver},</if>
            <if test="pId!=null">p_id = #{pId},</if>
            <if test="reason!=null">reason = #{reason},</if>
            <if test="invalid!=null">invalid = #{invalid},</if>
            <if test="remarks!=null">remarks = #{remarks},</if>
            <if test="procInsId!=null">proc_ins_id = #{procInsId},</if>
            <if test="procStatus!=null">proc_status = #{procStatus},</if>

            <if test="updateBy!=null and updateBy.id != null">update_by = #{updateBy.id},</if>
            <if test="updateDate!=null">update_date = #{updateDate},</if>
        </trim>
        WHERE id=#{id}
    </update>

    <update id="delete">
        UPDATE project_invoice_item SET
        del_flag = #{DEL_FLAG_DELETE}
        <choose>
            <when test="id !=null and id != ''">
                WHERE id = #{id}
            </when>
            <otherwise>
                WHERE invoice_id = #{invoice.id}
            </otherwise>
        </choose>
    </update>

    <!-- no use -->
    <delete id="deleteByIdsForReal" parameterType="list">
        delete from project_invoice_item where id in
        <foreach collection="array" item="i" open="(" separator=","
                 close=")">
            #{i}
        </foreach>
    </delete>

    <update id="deleteByIds" parameterType="list">
        UPDATE project_invoice_item SET
        del_flag = '1'
        where id in
        <foreach collection="array" item="i" open="(" separator=","
                 close=")">
            #{i}
        </foreach>
    </update>

</mapper>